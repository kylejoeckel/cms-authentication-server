service: cms-authentication-service

provider:
  name: aws
  runtime: python3.10
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:table/CMS-Users"

functions:
  authenticate:
    handler: handlers.Authenticate.authenticate
    events:
      - http:
          path: auth/login
          method: post
          cors: true
  createUser:
    handler: handlers.CreateUser.createUser
    events:
      - http:
          path: user
          method: post
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CMS-Users
        AttributeDefinitions:
          - AttributeName: organizationId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: organizationId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-python-requirements
  - serverless-offline


custom:
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

plugins:
  - serverless-offline
  - serverless-dynamodb-local

environment:
  DYNAMODB_TABLE: CMS-Users